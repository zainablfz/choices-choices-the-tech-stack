<html lang="nl" transition:animate="none">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <title>WOGO</title>
  </head>
  <body transition:animate="slide">
    <header>
      <h1>Walks</h1>
    </header>
    <ul>
      <li>Amsterdam</li>
      <li>Rotterdam</li>
      <li>Utrecht</li>
    </ul>
    <section>
      <article></article>
    </section>
  </body>
</html>

<style>
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    background-color: #201611;
  }

  header {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  h1 {
    color: #ffe5d9;
    font-size: 40px;
    justify-content: center;
    align-items: center;
    padding-top: 0.5em;
  }

  ul {
    padding: 2em;
    color: #ffe5d9;
    display: flex;
    list-style: none;
    padding-left: 2em;
    justify-content: space-evenly;
  }

  li {
  }
</style>

<script>
  import { fetchGraphQLData } from "../lib/contentful.js";
  import Layout from "../layouts/BaseLayout.astro";

  const params = Astro.params;

  async function fetchData() {
    const query = `
  {
    pageCollection(where: {slug:"${params.slug}"}, limit: 10) {
      items {
        slug
        title
        componentsCollection(limit: 10) {
          items {
            ... on Hero {
              title
              subtitle
              label
              price
              location
              asset {
                url
                description
              }   
            }
            ... on TypeText {
                title
                textParagraph
                asset {
                url
                title
                description
              }
            }
            ... on ItemCollection {
              componentsCollection(limit: 4) {
                items {
                  ... on Card {
                    title
                    textParagraph
                    price
                    location
                    cocktailDescription
                    image {
                      ... on Asset {
                        url
                        title
                        description
                      }
                    }
                  }
                  ... on TypeText {
                    title
                    textParagraph
                    icon {
                      url
                      title
                      description
                    }
                    asset {
                      url
                      title
                      description
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    itemCollection(id: "6mW82qJLx8D57GMLFIOLmw") {
      componentsCollection {
        items {
          ... on Card {
            title
            textParagraph
            location
            slug
            cocktailDescription
            price
            image {
              ... on Asset {
                url
                title
              }
            }
						citysCollection(limit: 4) {
              items {
                ... on TypeFIlterItem {
                  location
                }
              }
            }
          }
        }
      }
    }
  }
  `;
  }
  const data = await fetchGraphQLData(fetch);
</script>
